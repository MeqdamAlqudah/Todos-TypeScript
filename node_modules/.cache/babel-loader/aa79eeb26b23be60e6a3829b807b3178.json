{"ast":null,"code":"var _jsxFileName = \"/home/oem/React-TheCompleteGuide/Todos-TypeScript/src/store/todos-context.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Todo from '../models/todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodosContext = /*#__PURE__*/React.createContext({\n  items: [],\n  addTodo: () => {},\n  removeTodo: id => {}\n});\n\nconst TodosContextProvider = props => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n\n  const removeTodo = id => {\n    setTodos(previousTodo => {\n      return previousTodo.filter(item => item.id !== id);\n    });\n  };\n\n  const todoHandler = item => {\n    const newTodo = new Todo(item);\n    setTodos(previousTodo => {\n      return previousTodo.concat(newTodo);\n    }); // it is good for making sure that our code match the last snapshot\n  };\n\n  const contextValue = {\n    items: todos,\n    addTodo: todoHandler,\n    removeTodo: removeTodo\n  };\n  return /*#__PURE__*/_jsxDEV(TodosContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n};\n\n_s(TodosContextProvider, \"uu1hS44ImpqtDP84/kJI6RehsRs=\");\n\n_c = TodosContextProvider;\nexport default TodosContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodosContextProvider\");","map":{"version":3,"names":["React","useState","Todo","TodosContext","createContext","items","addTodo","removeTodo","id","TodosContextProvider","props","todos","setTodos","previousTodo","filter","item","todoHandler","newTodo","concat","contextValue","children"],"sources":["/home/oem/React-TheCompleteGuide/Todos-TypeScript/src/store/todos-context.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Todo from '../models/todo';\ntype TodosContextObj = {\n  items:Todo[];\n  addTodo: (item:string)=>void;\n  removeTodo:(id:string)=>void;\n};\nexport const TodosContext = React.createContext<TodosContextObj>({\n  items:[],\n  addTodo: ()=>{},\n  removeTodo:(id:string)=>{}\n});\n\nconst TodosContextProvider: React.FC<{children: React.ReactNode}> = (props)=>{\n  const [todos,setTodos] = useState<Todo[]>([]);\n  const removeTodo = (id:string)=>{\n    setTodos((previousTodo)=>{\n      return previousTodo.filter((item)=>item.id !== id);\n    });\n  };\n  const todoHandler = (item:string)=>{\n    const newTodo = new Todo(item)\n    setTodos((previousTodo)=>{\n      return previousTodo.concat(newTodo);\n    });// it is good for making sure that our code match the last snapshot\n  };\n  const contextValue:TodosContextObj = {\n    items:todos,\n    addTodo: todoHandler,\n    removeTodo: removeTodo\n  };\n  return <TodosContext.Provider value={contextValue}>{props.children}</TodosContext.Provider>;\n}\n\nexport default TodosContextProvider;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,gBAAjB;;AAMA,OAAO,MAAMC,YAAY,gBAAGH,KAAK,CAACI,aAAN,CAAqC;EAC/DC,KAAK,EAAC,EADyD;EAE/DC,OAAO,EAAE,MAAI,CAAE,CAFgD;EAG/DC,UAAU,EAAEC,EAAD,IAAa,CAAE;AAHqC,CAArC,CAArB;;AAMP,MAAMC,oBAA2D,GAAIC,KAAD,IAAS;EAAA;;EAC3E,MAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBX,QAAQ,CAAS,EAAT,CAAjC;;EACA,MAAMM,UAAU,GAAIC,EAAD,IAAa;IAC9BI,QAAQ,CAAEC,YAAD,IAAgB;MACvB,OAAOA,YAAY,CAACC,MAAb,CAAqBC,IAAD,IAAQA,IAAI,CAACP,EAAL,KAAYA,EAAxC,CAAP;IACD,CAFO,CAAR;EAGD,CAJD;;EAKA,MAAMQ,WAAW,GAAID,IAAD,IAAe;IACjC,MAAME,OAAO,GAAG,IAAIf,IAAJ,CAASa,IAAT,CAAhB;IACAH,QAAQ,CAAEC,YAAD,IAAgB;MACvB,OAAOA,YAAY,CAACK,MAAb,CAAoBD,OAApB,CAAP;IACD,CAFO,CAAR,CAFiC,CAI9B;EACJ,CALD;;EAMA,MAAME,YAA4B,GAAG;IACnCd,KAAK,EAACM,KAD6B;IAEnCL,OAAO,EAAEU,WAF0B;IAGnCT,UAAU,EAAEA;EAHuB,CAArC;EAKA,oBAAO,QAAC,YAAD,CAAc,QAAd;IAAuB,KAAK,EAAEY,YAA9B;IAAA,UAA6CT,KAAK,CAACU;EAAnD;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAnBD;;GAAMX,oB;;KAAAA,oB;AAqBN,eAAeA,oBAAf"},"metadata":{},"sourceType":"module"}